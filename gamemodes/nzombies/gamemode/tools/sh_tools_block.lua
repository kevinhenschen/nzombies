
local models = {
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X1,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X2,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X3,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X4,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X5,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X6,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X7,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X2,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X3,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X4,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X5,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X6,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X7,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE2X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X3,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X4,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X5,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X6,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X7,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE3X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4X4,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4X5,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4X6,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4X7,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4X8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE4X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE5,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE5X5,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE5X6,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE5X7,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE5X8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE5X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE5X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE5X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE6,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE6X6,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE6X7,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE6X8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE6X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE6X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE6X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE7,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE7X7,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE7X8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE7X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE7X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE7X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE8X8,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE8X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE8X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE8X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE16X16,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE16X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE16X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE24X24,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE24X32,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE32X32,
	
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATEHOLE1X1,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATEHOLE1X2,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATEHOLE2X2,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATEHOLE3,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.TRI1X1,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.TRI2X1,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.TRI3X1,
	
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X3X1TRAP,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X4X2TRAP,
	NZOMBIES_VARS.MODELS.NZOMBIES_PLATES.PLATE1X4X2TRAP1,
}

nzTools:CreateTool("block", {
	displayname = "Invisible Block Spawner",
	desc = "LMB: Create Invisible Block, RMB: Remove Invisible Block, R: Change Model",
	condition = function(wep, ply)
		return true
	end,
	PrimaryAttack = function(wep, ply, tr, data)
		local ent = tr.Entity
		if IsValid(ent) and ent:GetClass() == "wall_block" then
			nzMapping:BlockSpawn(ent:GetPos(),ent:GetAngles(), data.model, ply)
			ent:Remove()
		else
			nzMapping:BlockSpawn(tr.HitPos,Angle(90,(tr.HitPos - ply:GetPos()):Angle()[2] + 90,90), data.model, ply)
		end
	end,
	SecondaryAttack = function(wep, ply, tr, data)
		if IsValid(tr.Entity) and tr.Entity:GetClass() == "wall_block" then
			tr.Entity:Remove()
		end
	end,
	Reload = function(wep, ply, tr, data)
		if IsValid(tr.Entity) and tr.Entity:GetClass() == "wall_block" then
			tr.Entity:SetModel(data.model)
		end
	end,
	OnEquip = function(wep, ply, data)

	end,
	OnHolster = function(wep, ply, data)

	end
}, {
	displayname = "Invisible Block Spawner",
	desc = "LMB: Create Invisible Block, RMB: Remove Invisible Block, R: Change Model",
	icon = "icon16/shading.png",
	weight = 15,
	condition = function(wep, ply)
		return true
	end,
	interface = function(frame, data, context)
		local Scroll = vgui.Create( "DScrollPanel", frame )
		Scroll:SetSize( 280, 300 )
		Scroll:SetPos( 10, 10 )

		function Scroll.CompileData()
			return {model = data.model}
		end

		function Scroll.UpdateData(data)
			nzTools:SendData(data, "block", data) -- Save the same data here
		end

		local List	= vgui.Create( "DIconLayout", Scroll )
		List:SetSize( 340, 200 )
		List:SetPos( 0, 0 )
		List:SetSpaceY( 5 )
		List:SetSpaceX( 5 )

		local models = models

		for k,v in pairs(models) do
			local Blockmodel = List:Add( "SpawnIcon" )
			Blockmodel:SetSize( 40, 40 )
			Blockmodel:SetModel(v)
			Blockmodel.DoClick = function()
				data.model = v
				Scroll.UpdateData(Scroll.CompileData())
			end
			Blockmodel.Paint = function(self)
				self.OverlayFade = math.Clamp( ( self.OverlayFade or 0 ) - RealFrameTime() * 640 * 2, 0, 255 )

				if data.model == v or self:IsHovered() then
					self.OverlayFade = math.Clamp( self.OverlayFade + RealFrameTime() * 640 * 8, 0, 255 )
				end
			end
		end

		return Scroll
	end,
	defaultdata = {
		model = "models/nzombies_platess/plate2x2.mdl"
	},
})

nzTools:EnableProperties("block", "Edit Model...", "icon16/brick_edit.png", 9009, true, function( self, ent, ply )
	if ( !IsValid( ent ) or !IsValid(ply) ) then return false end
	if ( ent:GetClass() != "wall_block" ) then return false end
	if !nzRound:InState( ROUND_CREATE ) then return false end
	if ( ent:IsPlayer() ) then return false end
	if ( !ply:IsInCreative() ) then return false end

	return true

end, function(ent)
	return {model = ent:GetModel()}
end)
